// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")

}

/*
model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  name      String?
  password  String
  telephone String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  role      Role     @default(USER)
}

enum Role {
  USER
  ADMIN
}
*/

/*model User{
  id        Int      @id @default(autoincrement())
  profile   Profile?
}

model Profile {
  id       Int      @id @default(autoincrement())
  userId   Int      @unique
  user     User     @relation(fields: [userId], references: [id])
}*/

/*model Tenant {
  id    Int    @id @default(autoincrement())
  users User[] // Lado "1"
}

model User {
  id       Int    @id @default(autoincrement())
  tenantId Int
  tenant   Tenant @relation(fields: [tenantId], references: [id]) // Lado "N"
}*/

/*
model Post {
  id         Int             @id @default(autoincrement())
  categories PostCategory[]
}

model Category {
  id    Int             @id @default(autoincrement())
  posts PostCategory[]
}

model PostCategory {
  postId     Int
  categoryId Int

  post     Post     @relation(fields: [postId], references: [id])
  category Category @relation(fields: [categoryId], references: [id])

  @@id([postId, categoryId])
}
*/

enum Role {
  ADMIN
  USER
}

model Tenant {
  id        Int     @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  users     User[]
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  name      String
  password  String
  telephone String
  role      Role
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  tenantId  Int
  tenant    Tenant   @relation(fields: [tenantId], references: [id], onDelete: Cascade)

  @@index([tenantId])
}
